name: 'Terraform plan'
description: 'Setup Terraform and creates plan'
inputs:
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  azure_client_id:
    description: 'azure client id'
    required: true
  azure_tenat_id:
    description: 'azure tenat id'
    required: true
  azure_subscription_id:
    description: 'azure subscription id'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: tf-init
      shell: bash
      run: terraform init
      working-directory: ${{ inputs.terraform_directory }}

    - name: Terraform Plan
      id: tf-plan
      shell: bash
      working-directory: ${{ inputs.terraform_directory }}
      run: |
        export exitcode=0
        terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
        echo "exitcode=$exitcode" >> $GITHUB_ENV
        if [ $exitcode -eq 1 ]; then
          echo "Terraform Plan Failed!"
          exit 1
        fi

    - name: Publish Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan

    - name: Create String Output
      shell: bash
      id: tf-plan-string
      run: |
        TERRAFORM_PLAN=$(terraform show -no-color tfplan)
        delimiter="$(openssl rand -hex 8)"
        echo "summary<<${delimiter}" >> $GITHUB_ENV
        echo "## Terraform Plan Output" >> $GITHUB_ENV
        echo "<details><summary>Click to expand</summary>" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo '```terraform' >> $GITHUB_ENV
        echo "$TERRAFORM_PLAN" >> $GITHUB_ENV
        echo '```' >> $GITHUB_ENV
        echo "</details>" >> $GITHUB_ENV
        echo "${delimiter}" >> $GITHUB_ENV

    - name: Publish Terraform Plan to Task Summary
      shell: bash
      env:
        SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
      run: |
        echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
