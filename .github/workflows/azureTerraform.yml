name: Continuous deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.csproj'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  UI_WEBAPP_NAME: '${{ vars.UI_WEBAPP_NAME }}'
  RECIPES_FUNCAPP_NAME: '${{ vars.RECIPES_FUNCAPP_NAME }}'
  FILES_FUNCAPP_NAME: '${{ vars.FILES_FUNCAPP_NAME }}'
  UI_WEBAPP_RESOURCEGROUP: '${{ vars.UI_WEBAPP_RESOURCEGROUP }}'
  RECIPES_FUNCAPP_RESOURCEGROUP: '${{ vars.RECIPES_FUNCAPP_RESOURCEGROUP }}'
  FILES_FUNCAPP_RESOURCEGROUP: '${{ vars.FILES_FUNCAPP_RESOURCEGROUP }}'
  ARM_CLIENT_ID: '${{ secrets.AZURE_CLIENT_ID }}'
  ARM_SUBSCRIPTION_ID: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
  ARM_TENANT_ID: '${{ secrets.AZURE_TENANT_ID }}'
  AZURE_WEBAPP_PACKAGE_PATH: './ui'
  AZURE_FUNAPP_FILES_PACKAGE_PATH: './files'
  AZURE_FUNAPP_RECIPES_PACKAGE_PATH: './recipes'

jobs:
  dotnet_build_test_deploy:
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    steps: #that can be azure specific as there is azure function part
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore src/HomeCook/HomeCook.sln
      - name: Build
        run: dotnet build src/HomeCook/HomeCook.sln -c Release --no-restore
      - name: Test with the dotnet CLI
        run: dotnet test src/HomeCook/HomeCook.sln -c Release --no-restore --no-build --verbosity normal --filter "Category!=LongRunning"
      - name: Publish UI web app
        run: dotnet publish src/HomeCook/Web/UI -c Release -o '.${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      - name: Publish files azure function
        run: dotnet publish src/HomeCook/Services/Files/Web/Serverless.Azure -c Release -o '.${{ env.AZURE_FUNAPP_FILES_PACKAGE_PATH }}'
      - name: Publish recipes azure funtion
        run: dotnet publish src/HomeCook/Services/Recipes/Web/Serverless.Azure -c Release -o '.${{ env.AZURE_FUNAPP_RECIPES_PACKAGE_PATH }}'
      # - name: 'Upload Artifact UI'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: FILES_FUNCAPP_NAME
      #     path: ${{ env.AZURE_FUNAPP_FILES_PACKAGE_PATH }}
      #     retention-days: 1
      # - name: 'Upload Artifact files func app'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: RECIPES_FUNCAPP_NAME
      #     path: ${{ env.AZURE_FUNAPP_RECIPES_PACKAGE_PATH }}
      #     retention-days: 1
      # - name: 'Upload Artifact recipes func app'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: UI_WEBAPP_NAME
      #     path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      #     retention-days: 1

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure terraform plan and apply
        uses: ./.github/terraform-azure-plan-apply
        with:
          terraform_directory: 'terraform'

      - name: Get Publish Profile UI
        id: getPublishProfileUI
        run: |
          echo "::set-output name=PUBLISH_PROFILE_WEBAPP_UI::$(az webapp deployment list-publishing-profiles -g '${{ env.UI_WEBAPP_RESOURCEGROUP }}' -n '${{ env.UI_WEBAPP_NAME }}' --xml)"

      - name: Get Publish Profile Files Function app
        id: getPublishProfileFilesFuncApp
        run: |
          echo "::set-output name=PUBLISH_PROFILE_FUNCAPP_FILES::$(az functionapp deployment list-publishing-profiles -g '${{ env.FILES_FUNCAPP_RESOURCEGROUP }}' -n '${{ env.FILES_FUNCAPP_NAME }}' --xml)"

      - name: Get Publish Profile Recipes Function app
        id: getPublishProfileRecipesFuncApp
        run: |
          echo "::set-output name=PUBLISH_PROFILE_FUNCAPP_RECIPES::$(az functionapp deployment list-publishing-profiles -g '${{ env.RECIPES_FUNCAPP_RESOURCEGROUP }}' -n '${{ env.RECIPES_FUNCAPP_NAME }}' --xml)"

      # - name: Download UI artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: UI_WEBAPP_NAME

      # - name: Download files func app artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: FILES_FUNCAPP_NAME

      # - name: Download recipes func app artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: RECIPES_FUNCAPP_NAME

      - name: Deploy UI
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.UI_WEBAPP_NAME }}
          publish-profile: ${{ steps.getPublishProfileUI.outputs.PUBLISH_PROFILE_WEBAPP_UI }}
          package: 'src/HomeCook/Web/UI'

      - name: 'Deploy Files Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FILES_FUNCAPP_NAME }}
          package: '${{ src/HomeCook/Services/Files/Web/Serverless.Azure }}'
          publish-profile: ${{ steps.getPublishProfileFilesFuncApp.outputs.PUBLISH_PROFILE_FUNCAPP_FILES }}

      - name: 'Deploy Recipes Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.RECIPES_FUNCAPP_NAME }}
          package: '${{ src/HomeCook/Services/Recipes/Web/Serverless.Azure }}'
          publish-profile: ${{ steps.getPublishProfileRecipesFuncApp.outputs.PUBLISH_PROFILE_FUNCAPP_RECIPES }}

      #https://www.milanjovanovic.tech/blog/how-to-build-ci-cd-pipeline-with-github-actions-and-dotnet
