name: Continuous deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '**.cs'
      - '**.csproj'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: '${{ secrets.AZURE_CLIENT_ID }}'
  ARM_SUBSCRIPTION_ID: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'
  ARM_TENANT_ID: '${{ secrets.AZURE_TENANT_ID }}'
  AZURE_WEBAPP_PACKAGE_PATH: './publish/webapp/ui'
  AZURE_FUNAPP_FILES_PACKAGE_PATH: './publish/funcapp/files'
  AZURE_FUNAPP_RECIPES_PACKAGE_PATH: './publish/funcapp/recipes'

jobs:
  dotnet_build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    steps: #that can be azure specific as there is azure function part
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore src/HomeCook/HomeCook.sln
      - name: Build
        run: dotnet build src/HomeCook/HomeCook.sln -c Release --no-restore
      - name: Test with the dotnet CLI
        run: dotnet test src/HomeCook/HomeCook.sln -c Release --no-restore --no-build --verbosity normal --filter "Category!=LongRunning"
      - name: Publish UI web app
        run: dotnet publish src/HomeCook/Web/UI -c Release --no-build --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      - name: Publish files azure function
        run: dotnet publish src/HomeCook/Services/Files/Web/Serverless.Azure -c Release --no-build --output '${{ env.AZURE_FUNAPP_FILES_PACKAGE_PATH }}'
      - name: Publish recipes azure funtion
        run: dotnet publish src/HomeCook/Services/Recipes/Web/Serverless.Azure -c Release --no-build --output '${{ env.AZURE_FUNAPP_RECIPES_PACKAGE_PATH }}'

  terraform_deploy:
    needs: dotnet_build_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure terraform plan and apply
        uses: ./.github/terraform-azure-plan-apply
        with:
          terraform_directory: 'terraform'

      # - name: Deploy to Azure ðŸŒŒ
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
      #     package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      #https://www.milanjovanovic.tech/blog/how-to-build-ci-cd-pipeline-with-github-actions-and-dotnet
