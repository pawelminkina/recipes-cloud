name: 'Terraform Plan/Apply'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ inputs.terraform_directory }}

      - name: Terraform Plan
        id: tf-plan
        working-directory: ${{ inputs.terraform_directory }}
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_ENV
          if [ $exitcode -eq 1 ]; then
            echo "Terraform Plan Failed!"
            exit 1
          fi

      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

      - name: Create String Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_ENV
          echo "## Terraform Plan Output" >> $GITHUB_ENV
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo '```terraform' >> $GITHUB_ENV
          echo "$TERRAFORM_PLAN" >> $GITHUB_ENV
          echo '```' >> $GITHUB_ENV
          echo "</details>" >> $GITHUB_ENV
          echo "${delimiter}" >> $GITHUB_ENV

      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Push Terraform Output to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  terraform-apply:
    name: 'Terraform Apply'
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == '2'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ inputs.terraform_directory }}
        run: terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      - name: Terraform Apply
        working-directory: ${{ inputs.terraform_directory }}
        run: terraform apply -auto-approve tfplan
